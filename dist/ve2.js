!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.ve2=n():t.ve2=n()}(this,(function(){return t={839:t=>{t.exports={getName:function(t){return"object"==typeof t&&t.constructor?t.constructor.name:typeof t},clamp:function(t,n,i){return Math.min(i,Math.max(n,t))}}},197:(t,n,i)=>{const{getName:e,clamp:r}=i(839),s=(t,n)=>new o(t,n);s.zero=()=>new o,s.fromAngle=(t,n=1)=>new o(t).mul(n);class o{set x(t){c(t),this._x=t}set y(t){c(t),this._y=t}get x(){return this._x}get _0(){return this.x}get y(){return this._y}get _1(){return this.y}constructor(t,n){this._x=0,this._y=0,[this.x,this.y]=h(t,n)}toArray(){return[this.x,this.y]}toObject(){return{x:this.x,y:this.y}}mag(){return Math.sqrt(this.x*this.x+this.y*this.y)}hyp(t,n){return this.dist(t,n)}dist(t,n){const i=s(t,n);return this.sub(i).mag()}dot(t,n){const i=s(t,n);return this.x*i.x+this.y*i.y}dir(){return Math.atan2(this.y,this.x)}equals(t,n){const i=s(t,n);return this.x===i.x&&this.y===i.y}toString(){return`(${this.x}, ${this.y})`}join(t){return`${this.x}${t}${this.y}`}map(t){return new o(t(this._x),t(this._y))}clone(){return new o(this.x,this.y)}}function h(t,n){if(void 0===typeof t&&(t=0),void 0===typeof n&&(n=0),Array.isArray(t))return t.length>1?[t[0],t[1]]:1===t.length?[t[0],0]:[0,0];if("object"==typeof t){if(void 0!==t.x&&"number"!=typeof t.x)throw new Error("Object given to ve2 has an invalid x field. It should be a number or undefined (to indicate 0).");if(void 0!==t.y&&"number"!=typeof t.y)throw new Error("Object given to ve2 has an invalid y field. It should be a number or undefined (to indicate 0).");return[u(t.x,0),u(t.y,0)]}if("number"==typeof t){if("number"==typeof n)return[t,n];if(void 0===n)return i=t,[Math.cos(i),Math.sin(i)];throw new Error(`Cannot convert given arguments to vector. Unknown second argument of type ${typeof n}.`)}if(t instanceof o)return[t.x,t.y];if(void 0===t&&void 0===n)return[0,0];throw new Error(`Cannot convert given argument to vector. Received value of type ${e(t)}.`);var i}function u(t,n){return void 0===t?n:t}function a(t,n){return t instanceof o?t:new o(h(t,n))}function c(t){if("number"!=typeof t)throw new l(`x and y components must be numeric (found value of type: ${typeof t}).`);if(Number.isNaN(t))throw new l("x and y components cannot be NaN")}function f(t){return t+"i"}function d(t,n){o.prototype[t]=n(!1),o.prototype[f(t)]=n(!0)}const y=(t,n)=>{const i=f(t);d(t,(t=>t?n:function(...t){return this.clone()[i](...t)}))};y("swap",(function(){const t=this.x;return this.x=this.y,this.y=t,this})),y("norm",(function(){const t=this.mag();return 0===t?(this.x=0,this.y=0,this):(this.x=this.x/t,this.y=this.y/t,this)}));const x={round:Math.round,ceil:Math.ceil,floor:Math.floor};y("snap",(function(t=1,n="round"){const i=x[n];if(void 0===i)throw new Error(`ve2: Invalid snap mode of ${n}. Must be in: ${Object.keys(x).join(", ")}.`);return this.x=i(this._x/t)*t,this.y=i(this._y/t)*t,this})),y("adj",(function(t=1,n=8){if(8==n)return[this.add([-t,-t]),this.add([0,-t]),this.add([t,-t]),this.add([-t,0]),this.add([t,0]),this.add([-t,t]),this.add([0,t]),this.add([t,t])];if(4==n)return[this.add([0,-t]),this.add([-t,0]),this.add([t,0]),this.add([0,t])];throw new Error(`ve2: Invalid adj mode of ${n}. Must be either 8 (up/down/left/right plus diagonals) or 4 (just up/down/left/right).`)})),y("negX",(function(){return this.x=-this.x,this})),y("negY",(function(){return this.y=-this.y,this})),y("clamp",(function(t,n){return this.x=r(this.x,t,n),this.y=r(this.y,t,n),this})),y("addX",(function(t){return this.x+=t,this})),y("addY",(function(t){return this.y+=t,this})),y("subX",(function(t){return this.x-=t,this})),y("subY",(function(t){return this.y-=t,this})),y("mulX",(function(t){return this.x*=t,this})),y("mulY",(function(t){return this.y*=t,this})),y("divX",(function(t){return this.x/=t,this})),y("divY",(function(t){return this.y/=t,this})),y("clampY",(function(t,n){return this.y=r(this.y,t,n),this})),y("clampX",(function(t,n){return this.x=r(this.x,t,n),this})),y("rot",(function(t){const n=this.dir(),i=this.mag();return this.x=Math.cos(n+t),this.y=Math.sin(n+t),this.muli(i)})),y("lerp",(function(t,n,i){let e=null;return void 0===i||"number"!=typeof i?(e=a(t),i=n):e=a(t,n),this.x=this.x+(e.x-this.x)*i,this.y=this.y+(e.y-this.y)*i,this}));const p=(t,n,i)=>{d(t,(t=>function(e,r=e){let s=this.x,u=this.y,[a,c]=h(e,r);return i&&(i(s,a),i(u,c)),s=n(s,a),u=n(u,c),t?(this.x=s,this.y=u,this):new o(s,u)}))};p("add",((t,n)=>t+n)),p("sub",((t,n)=>t-n)),p("mul",((t,n)=>t*n)),p("div",((t,n)=>t/n),((t,n)=>{let i=t=>`Denominator for division cannot be ${t}.`;if(Number.isNaN(n))throw new l(i("NaN"));if(0===n)throw new l(i("zero"))})),p("max",Math.max),p("min",Math.min);const m=(t,n,i=n)=>{d(t,(t=>function(){return t?(this.x=n(this.x),this.y=i(this.y),this):new o(n(this.x),i(this.y))}))};m("round",Math.round),m("floor",Math.floor),m("ceil",Math.ceil),m("sqrt",(t=>{if(t<0)throw new l("Cannot take sqrt of a negative number");return Math.sqrt(t)})),m("abs",Math.abs),m("neg",(t=>-t));class l extends Error{constructor(t){super(t)}}t.exports=s}},n={},function i(e){var r=n[e];if(void 0!==r)return r.exports;var s=n[e]={exports:{}};return t[e](s,s.exports,i),s.exports}(197);var t,n}));